diff --git a/lib/HTML/FormHandler/Field/Compound.pm b/lib/HTML/FormHandler/Field/Compound.pm
index 9c4e79e..199b2f5 100644
--- a/lib/HTML/FormHandler/Field/Compound.pm
+++ b/lib/HTML/FormHandler/Field/Compound.pm
@@ -64,7 +64,7 @@ has '+field_name_space' => (
         my $self = shift;
         return $self->form->field_name_space
             if $self->form && $self->form->field_name_space;
-        return '';
+        return [];
     },
 );
 
diff --git a/t/constraints.t b/t/constraints.t
index 81c6128..1876542 100644
--- a/t/constraints.t
+++ b/t/constraints.t
@@ -24,13 +24,6 @@ use lib 't/lib';
        => from 'Str'
          => via { 0+$_ };
 
-   subtype 'ArrayRefStr'
-       => as 'ArrayRef[Str]';
-
-   coerce 'ArrayRefStr'
-       => from 'Str'
-       => via { [$_]; };
-
    enum 'RGBColors' => qw(red green blue);
 
    no Moose::Util::TypeConstraints;
diff --git a/t/field_traits.t b/t/field_traits.t
index 97ff9ce..07009ed 100644
--- a/t/field_traits.t
+++ b/t/field_traits.t
@@ -66,7 +66,7 @@ ok( $form->field('foo')->got_here  && $form->field('bar')->got_here, 'base field
 
 use HTML::FormHandler;
 $form = HTML::FormHandler->new(
-    widget_name_space => 'MyApp::Widget',
+    widget_name_space => ['MyApp::Widget'],
     field_list => [
         foo => { type => 'Text', required => 1, widget_attr => 'A Test!' },
         baz => { type => 'Display', traits => ['My::Render'], my_attr => 'something' },
diff --git a/t/password.t b/t/password.t
index 9b473b4..b042889 100644
--- a/t/password.t
+++ b/t/password.t
@@ -99,7 +99,7 @@ is ( $field->value, $pass, 'Input and value match' );
    use HTML::FormHandler::Moose;
    extends 'HTML::FormHandler';
 
-   has '+field_name_space' => ( default => 'Field' );
+   has '+field_name_space' => ( default => sub { ['Field'] } );
    has_field 'password' => ( type => 'Password', required => 1 );
    has_field '_password' => ( type => 'PasswordConf', );
 
diff --git a/t/render_widgets.t b/t/render_widgets.t
index 3c68236..7d11732 100644
--- a/t/render_widgets.t
+++ b/t/render_widgets.t
@@ -313,7 +313,7 @@ is( $form->field('boxed')->render, '<fieldset class="boxed"><legend>Boxed</legen
     use HTML::FormHandler::Moose;
     extends 'HTML::FormHandler';
 
-    has '+widget_name_space' => ( default => 'Widget' );
+    has '+widget_name_space' => ( default => sub { ['Widget'] } );
 
     has_field 'alpha' => ( widget => 'test_widget' );
     has_field 'omega' => ( widget => 'Omega' );
